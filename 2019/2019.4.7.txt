/unity/whats-new/2019.4.7
Release notes
Known Issues in 2019.4.7f1

AI: Editor crashes on MemoryManager::GetAllocator when selecting NavMeshAgent Component in the Inspector window
(1257220)
Asset Bundles: [Performance Regression] AssetBundleLoadAllAssets - Load_Prefabs_AllAssets is significantly slower than 18.4
(1203512)
Asset Bundles: [Performance Regression] AssetBundleLoadSingleAssets : LoadAsync_Prefabs_SingleAssets is significantly slower than 18.4
(1203511)
Asset Import Pipeline: [AssetDatabase2] Editor encounters an endless recursion when importing a Prefab from a Unity Package file
(1260657)
Global Illumination: [URP] Transparencies are ignored because URP uses _BaseMap as main texture identifier
(1246262)
Global Illumination: [macOS] BugReporter doesn't get invoked when the project crashes
(1219458)
Global Illumination: gi::InitializeManagers() takes 0.6s during Editor startup
(1162775)
Graphics - LowLevel: AsyncGPUReadback can leak memory under certain circumstances.
(1260624)
Graphics - LowLevel: Gfx.WaitForPresent / Gfx.WaitForPresentOnGfxThread huge spikes in Profiler when in Play Mode with vSync set to "Don't Sync"
(1108469)
IAP: Disabling and re-enabling IAP in services window throws multiple errors about failing to find assemblies
(1193774)
IAP: Unity purchasing gives error on project upgrade due to failing to find UnityEngine.UI assembly
(1193773)
Inspector Framework: Crash on mono_method_signature_checked when selecting a Context Menu option that has been removed from code
(1263906)
Linux: Linux Editor returns the "O" key's KeyCode when the Space key is being pressed
(1263921)
MacOS: [Mac] Many artifacts can be seen in Scene View when Scene Light is enabled and HDR is on with Metal API and Mac OS X 10.15.4
(1240265)
MacOS: [macOS] Unity kernel crashes Mac with OpenGL when only Intel Graphics are present
(1232673)
Metal: Metal Editor view repaint causes geometry explosion randomly
(1267126)
Mono: Crash with various stack traces when exiting Play Mode after recompiling scripts
(1238859)
Packman: Asset Store 'Complete Projects' overwriting Project Settings with no warning
(1255256)
Profiling: Performance issue in "Profiler" UI with increasing number of events
(967289)
Scene Management: Unity crashes when opening a project with two identical scenes, one of them being unloaded
(1069650)
Scripting: [SerializeReference] Polymorphic instances are always recreated when applying any inspector value change
(1193322)
Scripting: [SerializedField] fields produce "Field is never assigned to..." warning
(1080427)
Shadows/Lights: Skybox lighting is not rendered after creating gameobjects in the new scene until the lighting is rebaked
(1250293)
Window Management: Crash on block_remove when initiating a drag and closing the window from which the drag originated
(1221016)
Window Management: ReloadAssembly -> EndReloadAssembly processing freezes Editor for minutes
(1253165)

2019.4.7f1 Release Notes
Fixes

2D: AssetImporter saves freshly packed Atlas with different hash after Library deletion
Android: Fixed Android Vulkan black screen issue for certain Adreno 630 and 640 drivers
(1206635)
Asset Import: Scenes do not loose references to Model transform after updating a project with Presets being applied during import.
(1261935)
Asset Pipeline: Prevent PluginImporter importing from root folders in registered asset folders
(1193341)
Editor: Register mouseUp and mouseDrag events as PointerType.Mouse correctly.
(1259249)
Graphics: Add correct usage flag in VFX mesh stripping : avoid lost of actually used channel.
(1261152)
Graphics: Fix compute skinning with GraphicsJobs when using Vulkan or Metal
(1251156)
Graphics: Fixed a potential crash in VFX when effect was updated out of frustum in indirect mode
iOS: Fixed xcode archive validation error when using custom storyboard
(1264496)
iOS: Set proper cpu arch in UIRequiredDeviceCapabilities
License: Fixed Activating license from the command line fails if machine's binding key has changed
(1040333)
License: Fixed Cannot activate license within a docker container
(1193364)
License: Fixed Machine Identification errors during CLI license activation
(1255986)
License: Fixed Switching Project Path and activating a license causes wrong folder to be used for build
(1219428)
Linux: Fixed issue where single-instance was not being honored when set in the player settings.
(1211694)
Mobile: Fixing problem with signing release AAB using non-ASCII passwords
(1167092)
Particles: Fixed crash when using ParticleSystemRenderer.BakeMesh with Mesh particles and GPU instancing.
(1262125)
Physics: Fix an Editor crash on "Collider2D::Cleanup" when changing Scene and disabling a GameObject at the same time.
(1231211)
Physics: Fix an Editor crash on "PhysicsContacts2D::EndContact" when exiting Play mode after Assertion failed on expression: "GetShape() == NULL".
(1262936)
Profiler: Fix crash at Editor startup due to invalid profiler history size in the EditorPrefs
(1254442)
Profiler: Fixed an issue where CPU texture memory would no longer be reported.
(1261859)
Profiler: Fixed crash when passing null to GetRuntimeMemorySizeLong
(1250256)
SceneManager: Fixed SceneManager.GetSceneByBuildIndex returns a blank Scene object when 'Reload Scene' is disabled
(1250452)
Serialization: Fix serialization layout errors when using classes with arrays of structs containing SerializeReference fields
(1239667)
Shaders: Fixed an issue which would causes shader requirements not to be serialised correctly.
Text: - Fix for GetPathsToOSFonts() not returning any valid font file paths on iOS.
(1262883)
TextCore: - Fix potential marshalling array resize issue. case 1262879
(1262879)
UI Toolkit: Improved performance for elements using star rule by removing duplicates in StyleVariable list.
(1250638)
WebGL: IL2CPP was not generating threading-enabled code when the threadsSupport project setting was set.
(1243010)
XR: fix for bug that has been closed. 1254142
XR: Fixed MockHMD always falls back to Multipass even if SPI is selected.
(1260079)

Changes

XR: Updated Oculus XR Plugin package to 1.4.0.

Improvements

Editor: Vertex snapping is many times faster on large scenes, and it's easier to snap to vertices that are close/visible, without accidentally snapping to some far away occluded objects.
(1255176)

System Requirements
For development
OS: Windows 7 SP1+, 8, 10, 64-bit versions only; macOS 10.12+. (Server versions of Windows & OS X are not tested.)
CPU: SSE2 instruction set support.
GPU: Graphics card with DX10 (shader model 4.0) capabilities.
The rest mostly depends on the complexity of your projects.
Additional platform development requirements:

iOS: Mac computer running minimum macOS 10.12.6 and Xcode 9.4 or higher.
Android: Android SDK and Java Development Kit (JDK); IL2CPP scripting backend requires Android NDK.
Universal Windows Platform: Windows 10 (64-bit), Visual Studio 2015 with C++ Tools component or later and Windows 10 SDK

For running Unity games
Generally content developed with Unity can run pretty much everywhere. How well it runs is dependent on the complexity of your project. More detailed requirements:

Desktop:

OS: Windows 7 SP1+, macOS 10.12+, Ubuntu 16.04+
Graphics card with DX10 (shader model 4.0) capabilities.
CPU: SSE2 instruction set support.

iOS player requires iOS 10.0 or higher.
Android: OS 4.4 or later; ARMv7 CPU with NEON support; OpenGL ES 2.0 or later.
WebGL: Any recent desktop version of Firefox, Chrome, Edge or Safari.
Universal Windows Platform: Windows 10 and a graphics card with DX10 (shader model 4.0) capabilities
Exported Android Gradle projects require Android Studio 3.4 and later to build

