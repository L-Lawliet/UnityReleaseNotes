/unity/whats-new/2019.3.2
Release notes
Known Issues in 2019.3.2f1

2D: Crash on memory allocation when double-clicking a Sprite which size is reassigned in OnDrawGizmos
(1211482)
2D: Editor crashes on SpriteAtlas::CalculateCurrentPackingHash when entering Play mode and Sprite Packer is set to Always Enabled
(1217082)
2D: Editor crashes when selecting/clicking on 'Pack Preview' in a Sprite Atlas which contains .SVG asset
(1216877)
Ads:  Verified and default Ads package for 2019.3 should be 3.3.x instead of 2.0.8
(1206332)
Asset Import Pipeline: Calling AssetDatabase.ImportAsset() on a prefab, while having a reference to the prefab objects, breaks the references
(1217774)
Asset Importers: NullReferenceException is thrown when inspecting a .FBX file with multiple clips and opening Animation tab
(1215431)
Bugreporter: [macOS] BugReporter doesn't get invoked when the project crashes
(1219458)
Global Illumination: [CPU PLM] Out of memory errors after launching bake on an upgraded project on OSX
(1131009)
Global Illumination: [OSX][GPUPLM]OS Kernel Panic crash with 'Thread may have been prematurely finalized' after baking the scene with AMD GPU
(1160419)
Graphics - General: [SRP only] Clearing playerprefs causes assets to reimport on playmode
(1192259)
IAP: Disabling and re-enabling IAP in services window throws multiple errors about failing to find assemblies
(1193774)
IMGUI: "Render Mode" dropdown displaying items from a different component's, that was selected first, "Render Mode" dropdown
(1217278)
MacOS: [Mac] [Metal] [Editor] Switching focus to other apps and editor corrupts the text in the editor
(1156105)
Mobile: [Android] Loading assets from AssetBundles takes significantly more time when the project is built as an AAB
(1153358)
Package: Errors are Constantly thrown when Active Input Handling is set to Input System Package
(1176974)
Profiling: Loading raw profiler data causes editor crash on pthread_kill + 10
(1213975)
Scene Management: Prefab variant's Button component's OnClick() events are missing parameters when upgrading to Unity 2019.3.0a12 and above
(1208775)
Shaders:  Change in included hlsl file does not always trigger recompilation
(1215034)
Shuriken: Editor crashes when Particle System is emitting shadow casting lights
(1217809)
Universal RP: [URP] "Render Object" asset does not create in project window when added in "Render Features" field in the Inspector
(1214779)
Windows: UnityWebRequest fails to verify certificate when "Let's Encrypt Authority X1" certificate is present in system trust store
(1215665)
tvOS:  "Menu" button on Siri Remote returns "Joystick1Button19" instead of "Joystick1Button0"
(1214948)

2019.3.2f1 Release Notes
System Requirements Changes
For running Unity games

Android:

Minimum version incremented to 4.4 (from 4.1).
Removed Atom CPU recommendation.

iOS: minimum version incremented to 10.0 (from 9.0).

Fixes

Android: Make UnityWebRequest use system proxy.
(1199886)
Asset Pipeline: Fixed problem where projects could be loaded with a pending script compilation and domain reload.
(1210129)
Editor: Fix crash when multiselecting objects that host scripts that contain classes with [SerializeReference]
(1211265)
Editor: Fixed profiler's record toggle cannot be stopped with designated shortcut when in editor mode.
(1206281)
Editor: Fixed the Unity crash for enum popup.
(1209597)
GI: Artifacts on edge of area light when using AA with Progressive Lightmapper
(1213455)
GI: Auto generate turned off on 3D template
(1211922)
GI: Fix crash when trying to rasterize a 0 area triangle at the border of the lightmap UVs.
(1106048)
GI: Fixed baked lightmaps not shown in the "Baked Lightmap" scene view visualisation mode.
(1087333)
Graphics: Fix CrossFade bad CPU performance in SRP ( URP or HDRP )
(1214825)
Graphics: Fix DX12 freeze when synchronously waiting for an async readback request completion
(1216890)
Graphics: Fixed a crash inside the editor when trying to accessing vertex data of a mesh imported by an assetbundle
(1177174)
Graphics: Fixed Graphics.activeColorGamut to return HDR10 or Rec709 enums if HDR Display is currently active on DX11, DX12 or Vulkan
Graphics: Fixed potential deadlock in graphics jobs when loading shaders.
Graphics: Vulkan: Fixed a player build using Gamma colorspace to do linear conversion first, if HDR Display mode is enabled/forced on by the platform
(1214930)
iOS: Fixed a rare crash when running graphics jobs with tesselated objects
macOS: Better blit/copy encoder utilization
macOS: Fix "Asset Preview" generation not triggering GarbageCollection of versioned resources
(1214197)
Scripting: Fix a deadlock issue between Burst and the AssetDatabase
Scripting: Project will no longer throw package errors if it is located on root of a drive
(1196161)
Shaders: Fixing camera replacement shader to work correctly with local keywords.
(1195767)
Terrain: Fixed wrong result of TerrainData.GetHoles() method when holes data is empty.
UI Elements: Rich text tags were interpreted by the textfield and it affected its layout.
(1178247)
XR: fix for image corruption when renderViewportScale is changed with HDR off.
(1130382)
XR: Fix NULL Deref exception due to WorldAnchorStore reload when using Windows Mixed Reality.
(1165639)
XR: Fix to remove additional XR render pass functionality for built-in renderer.
(1204611)
XR: Fixed crash when exiting Play Mode in XR related to particle system with mesh instances.
(1163721)
XR: Fixed stereo rendering on Gear VR and Oculus Go.
(1209695)
XR: Fixed VR vsync issue in fullscreen mode with d3d11 standalone player.
(1158037)

API Changes

Graphics: Added: VisualEffectAsset events listing
Graphics: Added: VisualEffectAsset exposed properties listing

Changes

2D: Sprite Editor Window's Skinning Module default shortcut key for "Animation/Create Vertex" changed from "Shift-D" to "Shift-J" due to key conflict
2D: Sprite Editor Window's Skinning Module default shortcut key for "Animation/Weight Brush" changed from "Shift-C" to "Shift-N" due to key conflict
2D: SpriteSkin's deformed Sprite's bounds are now calculated and bounds property is removed from SpriteSkin's inspector
(1208712)
Timeline: ControlPlayableAsset.searchHierarchy (a.k.a. Control Children) now defaults to false.

Improvements

2D: Improve CalculateHash by not loading unnecessary objects.
2D: Sprite Editor Window Skinning Module's Bone and Sprite Visibility state persists after Apply
2D: Support PSB Imported sprite for packing even if inside Folder.
HLSLcc: Remove redundant type casts when translating instruction LD
Kernel: Optimisation for Job system when main thread is waiting on jobs to complete.

System Requirements
For development
OS: Windows 7 SP1+, 8, 10, 64-bit versions only; macOS 10.12+. (Server versions of Windows & OS X are not tested.)
CPU: SSE2 instruction set support.
GPU: Graphics card with DX10 (shader model 4.0) capabilities.
The rest mostly depends on the complexity of your projects.
Additional platform development requirements:

iOS: Mac computer running minimum macOS 10.12.6 and Xcode 9.4 or higher.
Android: Android SDK and Java Development Kit (JDK); IL2CPP scripting backend requires Android NDK.
Universal Windows Platform: Windows 10 (64-bit), Visual Studio 2015 with C++ Tools component or later and Windows 10 SDK

For running Unity games
Generally content developed with Unity can run pretty much everywhere. How well it runs is dependent on the complexity of your project. More detailed requirements:

Desktop:

OS: Windows 7 SP1+, macOS 10.12+, Ubuntu 16.04+
Graphics card with DX10 (shader model 4.0) capabilities.
CPU: SSE2 instruction set support.

iOS player requires iOS 10.0 or higher.
Android: OS 4.4 or later; ARMv7 CPU with NEON support; OpenGL ES 2.0 or later.
WebGL: Any recent desktop version of Firefox, Chrome, Edge or Safari.
Universal Windows Platform: Windows 10 and a graphics card with DX10 (shader model 4.0) capabilities
Exported Android Gradle projects require Android Studio 3.4 and later to build

