/unity/whats-new/2019.2.8
Release notes
Known Issues in 2019.2.8f1

Graphics - General: Project crashes on opening in ShaderLab::IntShader::PostLoad(Shader*)
(1184997)
Input: [Windows] IMGUI input doesn't work in builds when using preview InputSystem package
(1183394)
Mobile: Player Settings window becomes blank and starts spitting errors after going to Android Settings > Icon
(1177292)
Mobile: [Android] Crash in java.lang.UnsatisfiedLinkError when application location is changed to SD card on Android device
(1181365)
Physics: Crash on block_remove when changing mesh to Plane in Skinned Mesh Renderer while cloth component attached
(1162918)
Profiling: "Other" category is not shown in the player Profiler graph if a sample is not selected
(1165477)
Scene Management: Enabled Prefab is disabled after upgrading to Improved Prefabs
(1138224)
Scene Management: Transform::GetWorldToLocalMatrix  crash during first import when accessing Components in Prefabs
(1159905)
Scripting: Crash on SortByExecutionOrder after setting up font kerning values when PlayerPrefs.DeleteAll() is called in Start()
(1179631)
Scripting: Custom built DLL's scripts which have classes derived from UIBehaviour cannot be added as a component anymore
(1160664)
Scripting: Handles.Disc function performance is very slow in Scene View
(1165684)
Scripting: [Templates] Clamp BlendShapes are set to true by default when creating new projects
(1148638)
Themes: [Editor] Typing in Project window Search bar during Play mode causes NullReference exceptions
(1077389)

2019.2.8f1 Release Notes
System Requirements Changes
Nothing changed.
Fixes

2D: Fixed a crash on packing variant atlas after deleting sprite belonging to the master atlas.
(1141327, 1181923)
Animation: Prevent users from attempting to add properties in the animation window when the game object's hierarchy does not match the Animator's human avatar.
(1162335, 1182239)
Audio: DSPGraph: Fixed an error when disposing AudioKernel resources from an IAudioOutputJob.
Audio: DSPGraph: Fixed an occasional crash when disposing leaked node allocation.
Audio: DSPGraph: Fixed deallocation of native collections allocated as AudioKernel within the audio kernel lifecycle.
Editor: DSPGraph: Fixed a crash when exiting play mode.
Editor: Fixed an issue when double clicking on an error entry in the Unity Editor the console did not open the line causing the error.
(1171319, 1172857)
Editor: Fixed an issue where a new script was not being opened as a different tab when using VSCode.
(1173165, 1174355)
Editor: Fixed an issue with "open by file extension" which caused an exception in editor because simple "system open file" was removed.
(1168603, 1178557)
Editor: Fixed incorrect label width when drawing Splash Screen logo list items.
(1175164, 1182162)
Editor: [Mac] Fixed a crashes on __pthread_kill when opening a script when there's no Visual Studio installed.
(1173314, 1176160)
IL2CPP: Corrected the behavior of Marshal.OffsetOf for byval arrays of types with 4 byte alignment when they are not the first field in a struct.
(1182074, 1183542)
IL2CPP: Fixed an error from the Unity Linker when a type from a different assembly is used as a constructor argument for an attribute and passed to an object array.
(1180541, 1183698)
IL2CPP: Implemented the RuntimeHelpers.GetObjectValue method.
(1183866, 1184639)
iOS: Fixed an issue to better handle UnityWebRequest timeouts.
(1175344, 1183526)
iOS: Fixed errors with building Xcode project with ENABLE_ON_DEMAND_RESOURCES enabled.
(1140420, 1184476)
iOS: Reduced memory footprint and fixed a memory leaks by using a single NSURLSession for all UnityWebRequests.
(1177888, 1183980)
Mobile: Fixed an issue that caused a black screen when enabling or disabling real-time light at runtime on Vulkan when using multiple render passes with MSAA.
(1144830, 1169514)
Mobile: Fixed an issue where the left stick and right stick thumbs for Xbox and PS4 controllers weren't recognized correctly.
(1163377, 1176135)
Package Manager: Fixed an issue where Package Tests are only added when making a package testable and adding a dummy package.
(1135941, 1179576)
Package Manager: TextMeshPro Gizmos Icon appear again after being disabled when Gizmos pop-up is dismissed.
(1117690, 1180013)
Physics: Fixed a crash that happened when an inactive child body was unparented and activated.
(1123490, 1185613)
Profiler: Fixed an issue with metadata loading from the saved profiler data file.
(1150495, 1177570)
Scripting: Editor: After a player build finishes, scripts are no longer recompiled for the editor. The recompiling of scripts was an unnecessary step that existed due to legacy reasons. By skipping this step, finishing a player build now takes a shorter amount of time.
(1115674, 1163489)
Scripting: Negative maxdistancedelta should move away from target, not return target like positive maxdistancedelta.
(1173400, 1180024)
Scripting: Reduced memory fragmentation when using Profiler Window.
(1168484, 1177567)
Shaders: Optimized ShaderGUIUtility.ExtractCustomEditorType by using TypeCache.GetTypesDerivedFrom<ShaderGUI>()
(1094991, 1181949)
Themes: Fixed the Rect selecting in the Scene view where it would always pick objects loaded from Asset Bundle.
(1158173, 1171889)
UI: Fixed an issue with the UnityEvent property drawer so it shows UnityEvents in private properties correctly.
(1178687, 1185173)
UI: Fixed Prefabs with Slider component getting forced out of Prefab Mode in Play Mode.
(1173065, 1173862)
UTR: In PlayerConnection and EditionConnection added TrySend(...) and changed Send(...) so it always deliver data.
(1160182, 1181136)
Version Control: Fixed and issue with the Asset Store Package Installation wher it sometimes fails when VCS is enabled.
(1186510, 1186516)

System Requirements
For development
OS: Windows 7 SP1+, 8, 10, 64-bit versions only; macOS 10.12+. (Server versions of Windows & OS X are not tested.)
CPU: SSE2 instruction set support.
GPU: Graphics card with DX10 (shader model 4.0) capabilities.
The rest mostly depends on the complexity of your projects.
Additional platform development requirements:

iOS: Mac computer running minimum macOS 10.12.6 and Xcode 9.4 or higher.
Android: Android SDK and Java Development Kit (JDK); IL2CPP scripting backend requires Android NDK.
Universal Windows Platform: Windows 10 (64-bit), Visual Studio 2015 with C++ Tools component or later and Windows 10 SDK

For running Unity games
Generally content developed with Unity can run pretty much everywhere. How well it runs is dependent on the complexity of your project. More detailed requirements:

Desktop:

OS: Windows 7 SP1+, macOS 10.12+, Ubuntu 12.04+, SteamOS+
Graphics card with DX10 (shader model 4.0) capabilities.
CPU: SSE2 instruction set support.

iOS player requires iOS 9.0 or higher.
Android: OS 4.1 or later; ARMv7 CPU with NEON support or Atom CPU; OpenGL ES 2.0 or later.
WebGL: Any recent desktop version of Firefox, Chrome, Edge or Safari.
Universal Windows Platform: Windows 10 and a graphics card with DX10 (shader model 4.0) capabilities

