/unity/whats-new/2019.3.15
Release notes
Known Issues in 2019.3.15f1

Animation: Editor crashes with Animator::CreateInternalControllerPlayable when GameObjects are mached
(1245074)
Animation: [macOS] Inconsistent crash in objc_msgSend/objc_retain when previewing Animations with Animator window open
(1242026)
Asset Import Pipeline: Unity YAML Upgrading project to 2019.3 Asset Database V2 makes the project crash on startup
(1228192)
Audio:  Editor crashes on changing 'System Sample Rate' when Audio track preview is being played in Timeline window
(1232743)
Global Illumination: [OSX][GPUPLM]OS Kernel Panic crash with 'Thread may have been prematurely finalized' after baking the scene with AMD GPU
(1160419)
Global Illumination: [PLM] Baking stalls after disabling/enabling static gameobject
(1144403)
Global Illumination: [macOS] BugReporter doesn't get invoked when the project crashes
(1219458)
Global Illumination: gi::InitializeManagers() takes 0.6s during Editor startup
(1162775)
Graphics - General: [Performance Regression] AssetBundleLoadAllAssets - Load_Prefabs_AllAssets is significantly slower than 18.4
(1203512)
Graphics - General: [Performance Regression] AssetBundleLoadSingleAssets : LoadAsync_Prefabs_SingleAssets is significantly slower than 18.4
(1203511)
IAP: Disabling and re-enabling IAP in services window throws multiple errors about failing to find assemblies
(1193774)
IAP: Unity purchasing gives error on project upgrade due to failing to find UnityEngine.UI assembly
(1193773)
IMGUI: Editor crashes on StageUtility::IsGameObjectRenderedByCameraAndPartOfEditableScene when calling Undo.PerformUndo() method
(1242926)
Linux: Selection frame drawn in Scene view when a GameObject is selected while Alt and left mouse buttons are pressed
(1239227)
MacOS: [macOS] Editor crashes when trying to access audio capture devices
(1227607)
Mono: Crash with various stack traces when exiting Play Mode after recompiling scripts
(1238859)
Scripting: [SerializedField] fields produce "Field is never assigned to..." warning
(1080427)
Vulkan:  Crash on vk_optimusGetInstanceProcAddr when double clicking shader's Compiled Code drop down arrow
(1248909)
Windows: Cannot activate license within a docker container
(1193364)

2019.3.15f1 Release Notes
Fixes

2D: Fix ObjectOverrides for Tilemap Prefab Instance when comparing with the original Tilemap Prefab saved from a previous editor version
(1240640)
2D: OnGUI in SpriteShapeController creates GC allocs.
(1240380)
2D: [Backport] [2D] "Sprite Shape Renderer" component icon is missing in the Inspector
(1240471)
2D: [HDRP] Expanding invalid MinMaxAABB errors are thrown on creating SpriteShape controller
(1242623)
Animation: Fixed a crash when disconnecting an animation playable and reconnecting it later in a playable graph
(1223570)
Asset Bundles: Fix crash when bundle is asyncload and unload in the same frame
(1246930, 1248861)
Asset Import: Fixed issue in Model importer material remapping section where selecting none twice in the Object Selector locks it.
(1243020)
Asset Import: Fixed SpriteAtlas packing issue when texture importers having been badly migrated from old version of Unity and have a compression quality of -1 in their settings.
(1222441)
Asset Pipeline: Asset Import results can now have dependencies to script types. If an asset has a dependency to a script type, the asset will now get re-imported if script type serialization format changes.
(1216914)
Asset Pipeline: Asset Import results can now have dependencies to script types. If an asset has a dependency to a script type, the asset will now get re-imported if script type serialization format changes.
(1215729)
Asset Pipeline: Editor stops repainting and throws exceptions when creating new Scene inside AssetDatabase.StartAssetEditing()
(1221325)
Asset Pipeline: Fixed crashes happening when calling (ADBv2) SetImporterOverride directly from OnAssetsModified for a new asset that hasn't been imported previously (i.e. dragged into the project browser).
(1231143)
Asset Pipeline: Fixing editor freeze when importing meta file which have more than 100 megabytes of user data.
(1241933)
Asset Pipeline: Source Asset reloading improved, so that loaded objects get reloaded, if the associated script is modified
(1141360)
Build Pipeline: Fix rare race condition causes error message when calling AssetBundle.LoadAsset and then immediately unloading the bundle.
(1181323)
Build Pipeline: Fixed the incorrect file header size outputted in the Editor.log after a build
(1209767)
Editor: - Metal: Fixes a resource leak issue in some scenarios where a view is being repainted constantly
(1229502)
Editor: Ensure we do not save the isDarkTheme in an asignable variable to ensure users cannot bypass entitlement.
(1243064)
Editor: Fix "Exception: This method should have been replaced by codegen" error in Unity.Entities after fixing compile errors that were emitted on editor startup.
(1240746)
Editor: Fix "Exception: This method should have been replaced by codegen" error in Unity.Entities when entering play mode while recompiling all scripts.
(1241198)
Editor: Fix an issue where secondary container windows can pop up out-of-bounds on Linux if the display is resized
(1227209)
Editor: Fix crash attempting to import Substance file using the old Substance plugin.
(1242605)
Editor: Fix crash when undoing an array resize of a SerializeReferene array on a SerializeReference instance.
(1244028)
Editor: Fix Standalone profiler who was throwing an exception in OnGUI because m_VertSplit wasn't properly setup.
(1244345)
Editor: Fixed a GUILayout exception switching to Prefab Mode.
(1225712)
Editor: Fixed an issue where a console error is thrown when holding the control/command key and dragging objects in the hierarchy window.
(1222971)
Editor: Fixed an issue where Unity exceptions are continuously thrown when the tags are reset.
(1240105)
Editor: Fixed crash in RenderTexture::SetActive when entering the Play Mode
(1181415)
Editor: Fixed editor windows appearing black when showing up along with a modal dialog
(1240849)
Editor: Fixed renaming asset while scripts are re-compiling.
(1233782)
Editor: Scripts will now be recompiled with updated scripting defines, after a restart when the input mode has been changed.
(1214248)
Editor: Use the higher resolution of an icon for floating dpi values
(1226384)
GI: Fixes a crash in the CPU lightmapper due to out of bounds access to the light grid.
(1118524)
Graphics: Delayed acquiring the swapchain buffer when rendering with Vulkan
(1247359)
Graphics: Do not perform rendering during OnValidate/CheckConsistency. This will invariably fail.
(1218663)
Graphics: Errors appear when modifying a directional light with a reflection probe when HDRMode is R11G11B10
(1217364)
Graphics: Filters out VFXRenderer from inspector
(1206884)
Graphics: fix image layout complaint from vulkan validation layer by making sure we dont have multiple barriers for the same image
(1223210)
Graphics: fix ShaderInputNotProduced vulkan validation layer complaint by adding colorwrite properly for the shadow pass
(1223211)
Graphics: Fix slow down in Mesh API for some projects.
(1233944)
Graphics: Fix validation error when using SRGB format for UAV
(1221278)
Graphics: Fixed a crash where instancing properties are absent from the MaterialPropertyBlock object sent to DrawMeshInstanced calls. Fixed path-finding bug in which floating point errors would cause agents to take potentially large, spurious detours.
(1115627)
Graphics: Fixed an issue with warnings inside SpeedTreeWind.cginc regarding pow() not working for negative numbers
(1243948)
Graphics: Fixed crash in shader prewarming when using scriptable render pipeline
(1230177)
Graphics: Fixed memory leak when using -batchmode command line argument and particles, lines or trails.
(1224501)
Graphics: Implement frame pacing for Stadia
(1232776)
Graphics: Incorrect colors due to copying from BGRA to RGBA format
Graphics: MegaCity 2019.3 port crashes the editor when a subscene is streamed in and starts rendering
Graphics: Mesh.RecalculateTangents no longer trims UVs to Vector2, if incoming mesh had Vector3 or Vector4 UVs.
(1243747)
Graphics: Suppress HW-tier variants for SRPs. Disable tier-settings when an SRP is in use.
(1211204)
Graphics: Vulkan: Increased internal limitation of 64 descriptors per set to 128, fixes compatibility with some complex shaders
(1225246)
Graphics: When there is no renderpipeline tag specified in a shader match all pipelines, this was an oversight from a 19.3 refactoring and is now fixed.
(1204237)
IMGUI: Fixed the cursor position when Home End keys are pressed.
(1182094)
Input: Errors are Constantly thrown when Active Input Handling is set to Input System Package in HDRP and URP templates
(1176974)
iOS: check for Application.RequestAdvertisingIdentifierAsync too when determining if ads api is used
(1242276)
iOS: fixed an occasional crash on exit
(1238768)
iOS: fixed ReplayKit.APIAvailable returning false on the first call
(1233569)
iOS: Fixed showing Broadcasting ViewController on phones in landscape orientation
(1232967)
Linux: Fix for "OnApplicationFocus" not being received on toggling between game view and any other window in the Editor.
(1119030)
macOS: Fixed issue where repeatedly spamming the eyedropper button could hang the Editor.
(1239843)
macOS: Fixed unreadable text in macOS installer in dark mode
(1210046)
macOS: Fixes crash when changing Device to Use setting from Automatic to Intel GPU
(1242057)
macOS: Improves the module installation button in Build Settings
(1219284)
Particles: Fix applying a preset in the MinMaxCurve pop-out editor window.
(1237306)
Particles: Fix crash/visual corruption when using GPU Instanced mesh particles.
(1230566)
Particles: Fix memory overwrite/corruption when using shadow casting particle lights
(1051422)
Physics: Fix a memory leak producing 2D physics collision callbacks when the multithreaded solver option is active.
(1237323)
Prefabs: Fix crash on InstantiatePrefabDrag when dragging a Prefab to a Scene (that deletes its PrefabInstance handle in OnEnable)
(1229166)
Prefabs: Fix Dragging a UI Prefab to the Scene view incorrectly shows it in the Hierarchy and an ArgumentOutOfRangeException is thrown.
(1223793)
Prefabs: Fix that Editor logs errors when adding/removing a Component while Prefab is selected in a locked Inspector.
(1231637)
Prefabs: References could be lost if a prefab was edited and saved after a player build.
(1238280)
Prefabs: References following an array of a class that only contains a single boolean is now correctly remapped when the prefab is instantiated.
(1199466)
Prefabs: Self-reference to variant via property overrride is now correctly mapped to an internal reference
(1233462)
Profiler: Fixed an issue with remote captures where the Editor would freeze due to missing serialized data
Profiler: Fixed an issue with remote captures where the Editor would freeze due to missing serialized data
(1244421)
Profiler: Fixed chart highlight when selecting a simplified scripting sample in the CPU Profiler Timeline.
(1246653)
Profiler: Fixed issue where "Unrecognized block header in profiler data" would occur when building and running multiple times with autoconnect profiler enabled would occur.
(1217256)
Profiler: Fixed Timeline view Selection tool-tip being offset when expanding threads so that the thread with the selection goes out of view.
(1242260)
Scripting: Fixed - Added support for dialects of Chinese language in Application.systemLanguage.
(1206732)
Scripting Upgrade: avoids checking VCS if only files outside /assets folder needs updating.
(1217542)
Serialization: Disable unstable test for case 1247566
Serialization: Return a sound static element type name, when a SerializedProperty pointing to a managed reference array (not an actual array item)
(1225769)
Serialization: SerializedProperty named guid will now be handled correctly when serialized to and from yaml.
(1222969)
Shaders: Local keyword no longer removed when loaded from player asset bundle.
(1232272)
UI: Fix Canvas size when Game window exists but is hidden since the Editor start
(1225919)
UI Elements: Fixed issue with click events passing through the inspector preview if it's drawn over other inspector components.
(1233159)
UI Elements: Optimize StyleVariablesContext hash computation
UI Elements: Slider drop shadow would not properly follow indicator
(1206341)
Video: Changed texSubImage to texImage, in order to solve some browser specific rendering issues in WebGL Videos
(1188316)
WebGL: The rounding function we were using to support HDPI scaling is incorrect for negative numbers.
(1231678)
XR: Fix for excess memory compares in stereo and built-in matrix buffer updates during draw calls on Quest.
(1243086)
XR: Fixed a crash during shutdown on Android apps using Google's ARCore SDK for Unity.
(1197049)
XR: Fixes a lock/hang on splash screen on Oculus Quest when using IL2CPP and the Strip Engine Code option.
(1227107)
XR: fixes automatic upgrading for URP and HDRP projects
XR: Implement full render pass/render param support for XR SDK providers.
(1222873)
XR: Linux Editor no longer attempts to load Resonance Audio library when running on machines that don't support SSE 4.1 instructions
(1207680)
XR: XR: Fixed HDRP mirror view modes not working.
(1238533)

API Changes

2D: Added: Added an overload for GenerateGridSpriteRectangles with an extra parameter (bool keepEmptyRects) to allow users to keep empty rects as Sprites.

Changes

2D: Added Auto-Slicing and Keep Empty Rects options when selecting Grid Slicing in the Sprite Editor.
XR: Updated Oculus XR Plugin package to 1.3.4.

Improvements

Android: Documentation clarified for Application.targetFrameRate behavior on mobile devices.
Editor: Added a Warning HelpBox in Preferences under Enable Code Coverage to notify users about lower performance when Code Coverage is enabled
(1241660)

System Requirements
For development
OS: Windows 7 SP1+, 8, 10, 64-bit versions only; macOS 10.12+. (Server versions of Windows & OS X are not tested.)
CPU: SSE2 instruction set support.
GPU: Graphics card with DX10 (shader model 4.0) capabilities.
The rest mostly depends on the complexity of your projects.
Additional platform development requirements:

iOS: Mac computer running minimum macOS 10.12.6 and Xcode 9.4 or higher.
Android: Android SDK and Java Development Kit (JDK); IL2CPP scripting backend requires Android NDK.
Universal Windows Platform: Windows 10 (64-bit), Visual Studio 2015 with C++ Tools component or later and Windows 10 SDK

For running Unity games
Generally content developed with Unity can run pretty much everywhere. How well it runs is dependent on the complexity of your project. More detailed requirements:

Desktop:

OS: Windows 7 SP1+, macOS 10.12+, Ubuntu 16.04+
Graphics card with DX10 (shader model 4.0) capabilities.
CPU: SSE2 instruction set support.

iOS player requires iOS 10.0 or higher.
Android: OS 4.4 or later; ARMv7 CPU with NEON support; OpenGL ES 2.0 or later.
WebGL: Any recent desktop version of Firefox, Chrome, Edge or Safari.
Universal Windows Platform: Windows 10 and a graphics card with DX10 (shader model 4.0) capabilities
Exported Android Gradle projects require Android Studio 3.4 and later to build

