/unity/whats-new/2019.3.4
Release notes
Known Issues in 2019.3.4f1

Ads:  Verified and default Ads package for 2019.3 should be 3.3.x instead of 2.0.8
(1206332)
Animation: "Go to previous Keyframe" button/shortcut does not work in the Animation Window
(1220385)
Animation: Crash on PreOrderPlayableTraverser::Traverse when entering Play mode in a scene where every GameObject calls OnValidate method
(1220788)
Asset Import Pipeline: Editor crashes when importing prefab referencing scripts from precompiled libraries
(1217707)
Audio: Editor freezes or crashes when interacting with Native Audio Plugin SDK's Audio Mixers
(1217898)
Global Illumination: Crash in PVRTransmissionTextureData::PVRTransmissionTextureData when exiting Play Mode after loading another Scene
(1221209)
Global Illumination: Unity crashing when baking lights and generating light UV
(1118524)
Global Illumination: [OSX][GPUPLM]OS Kernel Panic crash with 'Thread may have been prematurely finalized' after baking the scene with AMD GPU
(1160419)
Graphics - General: Editor crashes on ComputeShader::GatherProperties when enabling Frame Debugger
(1221374)
Graphics - General: [SRP only] Clearing playerprefs causes assets to reimport on playmode
(1192259)
IAP: Disabling and re-enabling IAP in services window throws multiple errors about failing to find assemblies
(1193774)
IMGUI: [2020.1] "Render Mode" dropdown displaying items from a different component's, that was selected first, "Render Mode" dropdown
(1217278)
Inspector Framework: Canvas and Light's Render Mode's drop down values are the same when inspecting one of the Components
(1215130)
MacOS: [Mac] [Metal] [Editor] Switching focus to other apps and editor corrupts the text in the editor
(1156105)
MacOS: [macOS] BugReporter doesn't get invoked when the project crashes
(1219458)
Mobile: [Android] Loading assets from AssetBundles takes significantly more time when the project is built as an AAB
(1153358)
Package: Errors are Constantly thrown when Active Input Handling is set to Input System Package
(1176974)
Profiling: Editor crashes when loading profiler file with memcpy stacktrace
(1131782)
Profiling: PVRContextManager Thread has no data and occupies important area in Profiler Timeline View
(1223636)
Project Browser: Parent and child nested Scriptable Object Assets switch places when parent Scriptable Object Asset is renamed
(1189089)
Scene Management: Prefabs lose their values if scripts are removed then reintroduced
(1216914)
Shaders:  Change in included hlsl file does not always trigger recompilation
(1215034)
Shuriken: Crash on CreateDirect3D11SurfaceFromDXGISurface when calling DrawRenderer with a Trail Renderer
(1216216)
Shuriken: Editor crashes when Particle System is emitting shadow casting lights
(1217809)
Shuriken: Particle System that has a Stop Action gets cleared after being paused for a while
(1213288)
Universal RP: [URP] "Render Object" asset does not create in project window when added in "Render Features" field in the Inspector
(1214779)

2019.3.4f1 Release Notes
Fixes

2D: Fixed Unity crashes when selecting SpriteRenderer with tiling enabled in SceneView.
(1211482)
Android: Added maxAspectRatio to manifest only when targetting API 26 or higher.
(1215022)
Apple TV: Fixed an issue where "Menu" button on Siri Remote returns "Joystick1Button19" instead of "Joystick1Button0".
(1214948)
Asset Import: Fixed issue with uninitialized color variable in SketchupImporter.
(1212242)
Asset Import: Fixed typos in error messages of MaterialDescriptionPostProcessors.
(1212240)
Asset Import: Fixed wrong UV settings in Materials imported from .dae fileswith MaterialImportMode = ImportViaMaterialDescription.
(1212248)
Asset Import: NullReferenceException is thrown when inspecting a .FBX file with multiple clips and opening Animation tab.
(1215431)
Editor: Fixed missing MonoBleedingEdge/etc directory in Zip Installer.
(1221452)
GI: Fixed an issue with incorrect culling of spot lights against the light grid when using the CPU lightmapper.
(1221741)
Graphics: Fixed draw setup failure not properly detected during batched rendering.
(1218754)
Graphics: Fixed possibility to abort restart of editor after changing graphics API, which could put editor in a bad state.
(1206110)
Graphics: Fixed Vertex and Fragment shader interfaces mismatch on some platforms.
IL2CPP: Allowed the GetAllNetworkInterfaces method to work on UWP.
(1198610)
IL2CPP: Corrected secure string allocation on Windows platforms.
(1183660)
IL2CPP: Corrected the build for unsafe code using the cpobj and cpblk IL instructions with IntPtr arguments.
(1204247)
iOS: No longer include code using AdSupport unless user explicitly uses api that needs it.
(1219457)
macOS: Fixed for popup windows larger than the max texture size causing the metal crash.
(1219036)
Package Manager: Fixed an issue where files or directories ending with .core were ignored when making a package tarball through the /services/packages/pack route.
Package Manager: Fixed an issue where some registries were mistakenly not considered valid registries.
Package Manager: Fixed an issue where Unity could not connect to the UnityPackageManager process due to misconfigured proxy settings.
(1213556)
Package Manager: Fixed an issue where Unauthorized errors from npm registries were treated as generic errors.
Package Manager: Fixed Linux binary not running on CentOS distribution.
Package Manager: Fixed scoped registry packages not listed when the registry backend did not provide the content-type header in the response.
(1217800)
Package Manager: Improved the error message when a search for a package name results in no compatible version found by reporting the package name as well.
Package Manager: Resolved errors in Adaptive Performance Samsung Android package when using .net 3.5.
(1212092)
Package Manager: Resolved warnings in Adaptive Performance Package when using .net 3.5.
(1212094)
Package Manager: Shortened the name of folders storing Git packages in the project cache in order to reduce the likelihood of reaching the maximum path limit on Windows.
Prefabs: Editor functionality completely broken, due to prefab containing broken overrides.
This PR removes the broken overrides, to bring editor into a useful state.
(1208775)
Prefabs: Fixed AssetDatabase.SaveAssets and AssetDatabase.ImportAsset would breaking references to the imported/modified prefab.
(1217774)
Scripting: SerializedProperty::HasVisibleChildren now returns false in the case of a SerializedReference if the property is hidden in inspector. This is now consistent with SerializedProperty::NextVisible.
(1205366)
Scripting Upgrade: Fixed ApiUpdater not removing using statements in some scenarios.
Scripting Upgrade: Fixed ApiUpdater not respecting InternalsVisibleToAttribute.
Terrain: Fixed crash that occurs with async updates to Tree count.
(1212021)
Video: Last frames of video are repeated when played using Video Player Component.
(1209623)
Windows: Fixed primary display leaving fullscreen when 2nd display activated.
(1207918)
XR: Fixed mirror view UI is missing for 19.3 XRSDK.
(1221666)
XR: Fixed Visual Effect Graph not rendering with instanced terrain and XR single-pass instancing.
(1203623)
XR: Recentered the Headset when Oculus' Reset View is called from the OS.
(1159322)
XR: Support conditionally rendering stereo frames on XR Display using the shim layer.

API Changes

Graphics: Added: Added the option to limit the amount of visible lights when doing culling with Scriptable Render Pipeline.
Package Manager: Removed: Removed support for the deprecated exclude project dependency keyword.

Changes

Package Manager: An error is now reported when there are multiple embedded packages with the same name.
Package Manager: Changed path and file format of global configuration file. The configuration file format is now [TOML](https://github.com/toml-lang/toml). The old global configuration file path is deprecated. New global configuration should be set in this new file.

Improvements

Android: Update Android Logcat package  version to 1.1.0
Asset Import: Added AssetDatabase.DisallowAutoRefresh and AssetDatabase.AllowAutoRefresh to the C# API.
(1173031)
HLSLcc: Added an option that attempts to preserve varying locations
Package Manager: Update verified packages to 1.1.0:
com.unity.adaptiveperformance
com.unity.adaptiveperformance.samsung.android
Allow BuildPipeline to use a sysroot when building IL2CPP players for linux.

Features

Linux: Added support for building linux players using a sysroot package
Package Manager: Added support for Git package to be located in a repository sub-folder.
Package Manager: Added support for scoped registries authentication.
Package Manager: Introduced two new environment variables to override user and global configuration files path. UPM_GLOBAL_CONFIG_FILE overrides the default path of the global configuration file. UPM_USER_CONFIG_FILE overrides the default path of the user configuration file.

System Requirements
For development
OS: Windows 7 SP1+, 8, 10, 64-bit versions only; macOS 10.12+. (Server versions of Windows & OS X are not tested.)
CPU: SSE2 instruction set support.
GPU: Graphics card with DX10 (shader model 4.0) capabilities.
The rest mostly depends on the complexity of your projects.
Additional platform development requirements:

iOS: Mac computer running minimum macOS 10.12.6 and Xcode 9.4 or higher.
Android: Android SDK and Java Development Kit (JDK); IL2CPP scripting backend requires Android NDK.
Universal Windows Platform: Windows 10 (64-bit), Visual Studio 2015 with C++ Tools component or later and Windows 10 SDK

For running Unity games
Generally content developed with Unity can run pretty much everywhere. How well it runs is dependent on the complexity of your project. More detailed requirements:

Desktop:

OS: Windows 7 SP1+, macOS 10.12+, Ubuntu 16.04+
Graphics card with DX10 (shader model 4.0) capabilities.
CPU: SSE2 instruction set support.

iOS player requires iOS 10.0 or higher.
Android: OS 4.4 or later; ARMv7 CPU with NEON support; OpenGL ES 2.0 or later.
WebGL: Any recent desktop version of Firefox, Chrome, Edge or Safari.
Universal Windows Platform: Windows 10 and a graphics card with DX10 (shader model 4.0) capabilities
Exported Android Gradle projects require Android Studio 3.4 and later to build

