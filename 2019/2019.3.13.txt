/unity/whats-new/2019.3.13
Release notes
Known Issues in 2019.3.13f1

2D: Entering / leaving Play mode results in long wait times when a specific prefab with Grid / Tilemap components is in the scene
(1240640)
Asset Import Pipeline: Importing project freezes on 'Initial Asset Database Refresh' when there's a meta file containing big amount of user data
(1241933)
Asset Importers: It is possible to select "None (Object)" from the Material list in Model Importer Material Editor and Apply it
(1243020)
Audio:  Editor crashes on changing 'System Sample Rate' when Audio track preview is being played in Timeline window
(1232743)
Audio: [Windows] Editor uses one CPU Logical Processor at 100% while the game is in Pause Mode
(1219619)
Deployment Management: [Deployment] For an unsaved scene when Graphics API is changed, Graphics API is switched even after closing API modified window
(1240813)
Global Illumination: Unity crashing when baking lights and generating light UV
(1118524)
Global Illumination: [OSX][GPUPLM]OS Kernel Panic crash with 'Thread may have been prematurely finalized' after baking the scene with AMD GPU
(1160419)
Global Illumination: [PLM] Baking stalls after disabling/enabling static gameobject
(1144403)
Global Illumination: [macOS] BugReporter doesn't get invoked when the project crashes
(1219458)
Global Illumination: gi::InitializeManagers() takes 0.6s during Editor startup
(1162775)
Graphics - General:  'task.rasterData.vertexBuffer == NULL' errors when using a Particle System
(1226357)
Graphics - General: Mesh API calls causes slowdown in Play Mode
(1233944)
Graphics - General: [Performance Regression] AssetBundleLoadAllAssets - Load_Prefabs_AllAssets is significantly slower than 18.4
(1203512)
Graphics - General: [Performance Regression] AssetBundleLoadSingleAssets : LoadAsync_Prefabs_SingleAssets is significantly slower than 18.4
(1203511)
IAP: Disabling and re-enabling IAP in services window throws multiple errors about failing to find assemblies
(1193774)
IAP: Unity purchasing gives error on project upgrade due to failing to find UnityEngine.UI assembly
(1193773)
IMGUI: Editor crashes on StageUtility::IsGameObjectRenderedByCameraAndPartOfEditableScene when calling Undo.PerformUndo() method
(1242926)
Linux:  Editor freezes when capturing a Player snapshot through Memory Profiler
(1244421)
Linux:  [Editor] Input.GetAxis("Mouse ScrollWheel") always returns 0 when Cursor.lockState is set to CursorLockMode.Locked
(1219781)
MacOS:  Editor is leaking memory when Aura Camera component is attached to a GameObject in the scene and Aura preview is enabled
(1229502)
MacOS: [HDRP][macOS] Unity crashes when changing Device to Use setting from Automatic to Intel GPU
(1242057)
MacOS: [Mac] Build support modules fail to install when downloading them using "Open Download Page" button in Builds Settings
(1219284)
MacOS: [macOS] Editor crashes when trying to access audio capture devices
(1227607)
MacOS: [macOS] Mac crashes when opening the project with m_APIs under WindowsStandaloneSupport with only integrated Iris GPU
(1232673)
Mobile: [iOS] Debug .pdb files are added to iOS release builds
(1232798)
OpenGL:  Crash on BufferManagerGLES::AcquireBuffer when in Play Mode
(1230566)
Package: Errors are Constantly thrown when Active Input Handling is set to Input System Package
(1176974)
Profiling: Missing Profiler.EndSample errors appear after switching profiling target
(1181306)
Profiling: Standalone profiler doesn't draw properly
(1244345)
Scene Management: Prefab Variant Transform fileId changes
(1238280)
Scene Management: Prefabs lose their values if scripts are removed then reintroduced
(1216914)
Themes:  Components of a gameObject are not displayed in Inspector if its tag is deleted
(1240105)
WebGL:  Built project causes an uncaught abort exception when using dlopen() dynamic linking in Emscripten
(1192963)
WebGL:  VideoPlayer is not rendered in WebGL builds when the video is loaded via URL
(1188316)

2019.3.13f1 Release Notes
Fixes

Android: Fix Android keyboard not reporting LostFocus state correctly
(1229827)
Asset Import: Fixed a crash that could occur when importing a prefab that references scripts from precompiled assemblies.
(1217707)
Asset Import: Fixed excessive allocations during UTF-8 conversion
(1222373)
Asset Import: Fixed issue where the object picker loses focus in the Model importer's remapped materials list after selecting 'none'.
Asset Pipeline: Build option BuildOptions.NoUniqueIdentifier caused crash when building player
(1225525)
Asset Pipeline: Fix crash due to threading race issue with LoadAssetAsync and Unload called in the same frame.
(1228306)
Editor: Fixed infinite loop that could could occur when loading corrupted prefab assets
(1216483)
Editor: Fixed issue where whitespace was added in serialized text fields when a newline was directly followed by a single quote character (\n')
(1228940)
Editor: P/Invoke library name resolution is now more robust.
(1226012)
Editor: Restored the behavior of FoldOut API.
(1213781)
Graphics: FrameDebugger + SRP Batcher memory leak fixed
(1194652)
Graphics: Mipmaps requested to stream from script now works when there are only instantiated entity objects
(1232516)
Graphics: Vulkan: Fixes a potential crash issue when invalidating swapchain
IL2CPP: Allow inspection of NativeArray objects in the debugger.
(1215119)
IL2CPP: Correct set the value of by reference parameters in the caller for some generic virtual method call cases.
(1212919)
IL2CPP: Correct sporadic lockups in async calls on ARM64 platforms.
(1199965)
IL2CPP: Generate less source code for managed debugging.
(1205136)
iOS: fixed crash on disconnecting external display
(1211991)
Kernel: Fixed Assert "ManagedJobIndexPool ran out of indices" when running the Editor on CPUs with more than 64 hardware threads.
(1204885)
macOS: Fixed issue where a system dialog pops up in batch mode after a previous crash.
(1183783)
Player: Explicitly stopping games after test runs to ensure clean test environment.
Player: Fixed issue where output from Stadia commands were not printing stderr.
Profiler: Fix Unity hangs when Deep Profiling and Call Stacks are enabled on Linux
(918779)
Profiler: Fixed deep profiling shows the top layer function nested twice in the hierarchy
(1225092)
Profiler: Fixed Profiler Timeline View not being able to visualize large frame which contains Asset Refresh workload (~15M samples)
(1239676)
Profiler: Fixes case where total memory does not correspond to what the system shows
(1169950)
Scripting: Fix Burst SharedStatic<T> to be initialized to zero after a domain reload.
Scripting: Fix warning being logged to console when adding a script with the same name as a component.
(1224238)
Scripting: Remove overwritten ReferenceOutputAssembly from project reference for Visual Studio project generation
(1243277)
Shaders: Fixed ShaderUtil.IsPassCompiled(), which was returning the state of passes in the first subshader, instead of the active subshader
(1238973)
UI Elements: Fixed issue with editor dropdowns sometimes not reacting after first click until mouse has moved.
(1223087)
Universal Windows Platform: calling into C# code will no longer crash the player before initializing Unity engine.
(1200489)
Universal Windows Platform: fix building player when using Windows SDK versions 15063 or 16299.
(1219134)

System Requirements
For development
OS: Windows 7 SP1+, 8, 10, 64-bit versions only; macOS 10.12+. (Server versions of Windows & OS X are not tested.)
CPU: SSE2 instruction set support.
GPU: Graphics card with DX10 (shader model 4.0) capabilities.
The rest mostly depends on the complexity of your projects.
Additional platform development requirements:

iOS: Mac computer running minimum macOS 10.12.6 and Xcode 9.4 or higher.
Android: Android SDK and Java Development Kit (JDK); IL2CPP scripting backend requires Android NDK.
Universal Windows Platform: Windows 10 (64-bit), Visual Studio 2015 with C++ Tools component or later and Windows 10 SDK

For running Unity games
Generally content developed with Unity can run pretty much everywhere. How well it runs is dependent on the complexity of your project. More detailed requirements:

Desktop:

OS: Windows 7 SP1+, macOS 10.12+, Ubuntu 16.04+
Graphics card with DX10 (shader model 4.0) capabilities.
CPU: SSE2 instruction set support.

iOS player requires iOS 10.0 or higher.
Android: OS 4.4 or later; ARMv7 CPU with NEON support; OpenGL ES 2.0 or later.
WebGL: Any recent desktop version of Firefox, Chrome, Edge or Safari.
Universal Windows Platform: Windows 10 and a graphics card with DX10 (shader model 4.0) capabilities
Exported Android Gradle projects require Android Studio 3.4 and later to build

