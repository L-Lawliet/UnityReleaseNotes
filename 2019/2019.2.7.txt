/unity/whats-new/2019.2.7
Release notes
Known Issues in 2019.2.7f2

Graphics - General: Editor is lagging when modifying material properties
(1094991)
Input: [Windows] IMGUI input doesn't work in builds when using preview InputSystem package
(1183394)
Mobile: Player Settings window becomes blank and starts spitting errors after going to Android Settings > Icon
(1177292)
Mobile: [Android] Crash in java.lang.UnsatisfiedLinkError when application location is changed to SD card on Android device
(1181365)
Physics: Crash on block_remove when changing mesh to Plane in Skinned Mesh Renderer while cloth component attached
(1162918)
Scene Management: Enabled Prefab is disabled after upgrading to Improved Prefabs
(1138224)
Scene Management: Transform::GetWorldToLocalMatrix  crash during first import when accessing Components in Prefabs
(1159905)
Scripting: Crash on SortByExecutionOrder after setting up font kerning values when PlayerPrefs.DeleteAll() is called in Start()
(1179631)
Scripting: Custom built DLL's scripts which have classes derived from UIBehaviour cannot be added as a component anymore
(1160664)
Scripting: Handles.Disc function performance is very slow in Scene View
(1165684)
Scripting: [Templates] Clamp BlendShapes are set to true by default when creating new projects
(1148638)

2019.2.7f2 Release Notes
System Requirements Changes
Nothing changed.
Improvements

Audio: DSPGraph: Optionally allow execution of unattached subgraphs.
Shaders: Improved information about shader compilation in the profiler.

Fixes

Editor: Fixed an issue with the splashscreen background not being built correctly.
(1177632, 1183041)
IL2CPP: Added support for initializing "in" parameters with constant default values.
(1174681, 1179555)
IL2CPP: Avoid exception related to loading libc on platforms that don't support it.
(1022228, 1171968)
IL2CPP: Corrected the behavior of SendFile on Windows.
(1171712, 1176953)
IL2CPP: Corrected the reference count behavior for SafeHandle marshaling with out parameters.
(1175211, 1177745)
IL2CPP: Prevents the creation of GC logs in non-development players.
(1164367, 1178087)
iOS: Fixed a deprecated API usage warning for using UIWebView when submitting Builds to the App Store Connect.
(1180664, 1182272)
Linux: Fixed a stack overflow with Streamed AudioClip that caused glitching and a crash when closing the player.
(1167107, 1182314)
Linux: Fixed some popup menus from losing focus and disappearing before they are usable.
(1142911, 1144233)
Mono: Fixed an issue where recursive type definitions would fail to compile successfully.
(1147579, 1183773)
Physics: RRigidbody2D XY position constraints now produce an unmoving "hard" constraint and removes any performance penalty.
(1176908, 1182056)
Rider: Fixed an issue with the Show editor prefs value not on external tools page.
SceneManager: Fixed a domain reload performance regression caused by Northstar.
(1161373, 1175381)
SceneManager: Fixed an issue with the right-handed copy/paste shortcuts.
(1132112, 1179582)
Scripting: Fixed an issue where recursive type definitions would fail to compile successfully.
(1147579, 1183773)
Scripting: Fixed trigger script compilation when define symbols or allow unsafe code are modified from a external tool.
(1171967, 1179586)
Scripting: LogStringToConsole is performing too many allocations when printing to console which results in calling GC.collect()
(1174548, 1181458)
Universal Windows Platform: Fixed a missing Pen input data with new Input System.
(1168844, 1182995)
Universal Windows Platform: Fixed an issue with the Xbox DPad not working in new Input System.
(1168836, 1183001)
Version Control: Asset store package installation now tries to open Assets for edit in Version Control when they are being replaced.
(1178410, 1179969)
Windows: Fixed and issue with TLS handshake Windows/UWP when root certificate is trusted by the system but not yet in it's certificate store.
(1076758, 1175309)

System Requirements
For development
OS: Windows 7 SP1+, 8, 10, 64-bit versions only; macOS 10.12+. (Server versions of Windows & OS X are not tested.)
CPU: SSE2 instruction set support.
GPU: Graphics card with DX10 (shader model 4.0) capabilities.
The rest mostly depends on the complexity of your projects.
Additional platform development requirements:

iOS: Mac computer running minimum macOS 10.12.6 and Xcode 9.4 or higher.
Android: Android SDK and Java Development Kit (JDK); IL2CPP scripting backend requires Android NDK.
Universal Windows Platform: Windows 10 (64-bit), Visual Studio 2015 with C++ Tools component or later and Windows 10 SDK

For running Unity games
Generally content developed with Unity can run pretty much everywhere. How well it runs is dependent on the complexity of your project. More detailed requirements:

Desktop:

OS: Windows 7 SP1+, macOS 10.12+, Ubuntu 12.04+, SteamOS+
Graphics card with DX10 (shader model 4.0) capabilities.
CPU: SSE2 instruction set support.

iOS player requires iOS 9.0 or higher.
Android: OS 4.1 or later; ARMv7 CPU with NEON support or Atom CPU; OpenGL ES 2.0 or later.
WebGL: Any recent desktop version of Firefox, Chrome, Edge or Safari.
Universal Windows Platform: Windows 10 and a graphics card with DX10 (shader model 4.0) capabilities

