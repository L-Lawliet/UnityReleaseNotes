/unity/whats-new/2019.4.6
Release notes
Known Issues in 2019.4.6f1

AI: Editor crashes on MemoryManager::GetAllocator when selecting NavMeshAgent Component in the Inspector window
(1257220)
Asset Bundles: [Performance Regression] AssetBundleLoadAllAssets - Load_Prefabs_AllAssets is significantly slower than 18.4
(1203512)
Asset Bundles: [Performance Regression] AssetBundleLoadSingleAssets : LoadAsync_Prefabs_SingleAssets is significantly slower than 18.4
(1203511)
Asset Import Pipeline: [AssetDatabase2] Editor encounters an endless recursion when importing a Prefab from a Unity Package file
(1260657)
Asset Importers: Models change their position in scene when upgrading project
(1261935)
Global Illumination: [URP] Transparencies are ignored because URP uses _BaseMap as main texture identifier
(1246262)
Global Illumination: [macOS] BugReporter doesn't get invoked when the project crashes
(1219458)
Global Illumination: gi::InitializeManagers() takes 0.6s during Editor startup
(1162775)
Graphics - LowLevel: AsyncGPUReadback can leak memory under certain circumstances.
(1260624)
IAP: Disabling and re-enabling IAP in services window throws multiple errors about failing to find assemblies
(1193774)
IAP: Unity purchasing gives error on project upgrade due to failing to find UnityEngine.UI assembly
(1193773)
Inspector Framework: Crash on mono_method_signature_checked when selecting a Context Menu option that has been removed from code
(1263906)
MacOS: [Mac] Many artifacts can be seen in Scene View when Scene Light is enabled and HDR is on with Metal API and Mac OS X 10.15.4
(1240265)
MacOS: [macOS] Unity kernel crashes Mac with OpenGL when only Intel Graphics are present
(1232673)
Packman: Asset Store 'Complete Projects' overwriting Project Settings with no warning
(1255256)
Physics2D: Editor crashes on PhysicsContacts2D::EndContact when exiting Play mode after Assertion failed on expression: GetShape() == NULL
(1262936)
Profiling: Performance issue in "Profiler" UI with increasing number of events
(967289)
Scene Management: Unity crashes when opening a project with two identical scenes, one of them being unloaded
(1069650)
Scripting: [SerializeReference] Polymorphic instances are always recreated when applying any inspector value change
(1193322)
Scripting: [SerializedField] fields produce "Field is never assigned to..." warning
(1080427)
Shadows/Lights: Skybox lighting is not rendered after creating gameobjects in the new scene until the lighting is rebaked
(1250293)
Window Management: Crash on block_remove when initiating a drag and closing the window from which the drag originated
(1221016)
Window Management: ReloadAssembly -> EndReloadAssembly processing freezes Editor for minutes
(1253165)
Windows: Cannot activate license within a docker container
(1193364)

2019.4.6f1 Release Notes
Fixes

Android: Fixed an issue when using blend shapes with GPU skinning on older Adreno devices with OpenGL ES.
(1253349)
Animation: Fixed a crash that happened when ScriptPlayableOutput::ScriptProcessFrame was called after destroying a playableOutput.
(1251399)
Apple TV: Fixed crash on startup due to large vm blocks usage
Audio: Fixed import failures with certain low-bitrate/-samplerate clips.
(1143239)
Editor: Fixed NullReferenceException being thrown when closing a Modal window using the Close method.
(1251200)
Editor: Fixed the crash while opening a custom StreamVR Input Window.
(1211288)
Editor: No longer show the splash screen when running the Linux editor in batch mode.
(1218988)
Graphics: Added an option to delay acquiring the swapchain buffer until after rendering in Vulkan.
Graphics: Fixed an incorrect clamping of ASTC HDR lightmaps.
(1256699)
Graphics: Fixed an incorrect cubemap convolution of ASTC HDR cubemaps.
(1256696)
Graphics: Fixed issue where the Vulkan pipeline cache data was not getting saved on Stadia.
(1244925)
Graphics: Fixed shader codegen for countbits() function in Metal and GLSL/SPIR-V
Graphics: Fixed shader with constant buffer not used causing crashes in editor.
(1263127)
Graphics: Made sure the mojo-shader-preprocessor is not using fixed arrays while reducing an expression.
(1217043)
Graphics: Metal: Fix HLSL compatibility with DrawProceduralIndirect, SV_InstanceID always starts at 0 but with Metal, a base instance was not subtracted for equal behavior
Graphics: Metal: Fix system instability/hang issues with texture versioning
Graphics: Metal: Fixed Indirect drawcalls from binding buffers with wrong offset
Graphics: Metal: Fixed MSAA ResolveDepthIntoTexture to use the resolved texture as a source when doing blit into destination
Graphics: Metal: Fixes to direct binding of ConstantBuffers
Graphics: Metal: Separated ComputeBuffer counters into separate physical buffers to improve data access/alignment
Input: Corrected inconsistent display names in the input debugger on macos.
(1210302)
iOS: Fixed crash in WebCamTexture when permission has been denied to the cameras.
(1217018)
Package Manager: Fixed error on opening Editor with Package Manager opened to My Assets.
(1210282)
Package Manager: Fixed loading spinner rotation speed.
(1248718)
Package Manager: Fixed package versions list offset bug.
(1263104)
Profiler: Fixed OOM crash when saving large frame in Profiler.
(1253117)
Shaders: Fixed a crash when using local shader keywords and UsePass functionality.
(1259778)
Shaders: Fixed a shader compiler crash when two cbuffers with the same name are declared within the same shader. This now results in a compilation error.
(1242162)
Shaders: Fixed player crashing when warming up a shader with local keywords that has a fallback that also has local keywords (a different set).
(1258697)
Shaders: Shader variant collection can now use local shader keywords when creating a variant from C#.
(1244648)
UI: Fixed the issue where the vertices were not stripped for rich text in multi line.
(1182818)
UI Toolkit: No longer allocating TextInfo inside TextHandle when not necessary.
(1249096)
XR: Fixed Camera matrix returns for HL2 photo capture.
(1207427)

Features

Input: Input System has been added as a verified package.
Package Manager: Split All Packages into Unity Registry and My Registries.

System Requirements
For development
OS: Windows 7 SP1+, 8, 10, 64-bit versions only; macOS 10.12+. (Server versions of Windows & OS X are not tested.)
CPU: SSE2 instruction set support.
GPU: Graphics card with DX10 (shader model 4.0) capabilities.
The rest mostly depends on the complexity of your projects.
Additional platform development requirements:

iOS: Mac computer running minimum macOS 10.12.6 and Xcode 9.4 or higher.
Android: Android SDK and Java Development Kit (JDK); IL2CPP scripting backend requires Android NDK.
Universal Windows Platform: Windows 10 (64-bit), Visual Studio 2015 with C++ Tools component or later and Windows 10 SDK

For running Unity games
Generally content developed with Unity can run pretty much everywhere. How well it runs is dependent on the complexity of your project. More detailed requirements:

Desktop:

OS: Windows 7 SP1+, macOS 10.12+, Ubuntu 16.04+
Graphics card with DX10 (shader model 4.0) capabilities.
CPU: SSE2 instruction set support.

iOS player requires iOS 10.0 or higher.
Android: OS 4.4 or later; ARMv7 CPU with NEON support; OpenGL ES 2.0 or later.
WebGL: Any recent desktop version of Firefox, Chrome, Edge or Safari.
Universal Windows Platform: Windows 10 and a graphics card with DX10 (shader model 4.0) capabilities
Exported Android Gradle projects require Android Studio 3.4 and later to build

