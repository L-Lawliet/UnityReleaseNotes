5.4.0b12 Release Notes (Delta since b11)
Known Issues

    After expand/collapse Unity Editor window looks corrupted. If you maximize/minimize/click on windows in Editor they'll return to normal state.
    Crash in ::RenderGameViewCameras:: after overflowing Width or Height fields of the Game view resolution window
    First launch of Unity on new computer doesn't create "~/Library/Unity/Packages" folder, blocking homescreen from loading. Second launch will fix the issue
    GPU Instancing: Instancing might get broken under glcore if graphics jobs are enabled.
    In deferred rendering, lightmapped objects affected by mixed-mode lights will fallback to forward rendering.
    On Windows with MSAA and Image Effects, game view can be rendered upside down.
    Shadows: Directional shadows will present shadow acnee when using a custom projection matrix and a very large frustum (20k+)
    Unity crashes when calling various methods on TerrainData with boundary values
    Using OpenVR + Vive + Outdated Oculus Utils = Crash. Users are advised to update their Oculus Utils.
    VR: Image effects do not currently work with single pass rendering.
    VR: Single-Pass-Stereo causes some lighting problems
    VR: Some built-in shaders do not currently work with single pass rendering resulting in wrong transformations in right eye. Workaround is to manually include the shaders in your project.
    [iOS][Metal] Performance degradation in 5.4 with some custom shaders

Features

    Windows Store: Add command line argument -dontConnectAcceleratorEvent to disable accelerator event based input. This disables support for some keys in Unity (like F10, Shift), but fixes issue with duplicate characters in some XAML controls.

Changes

    UI: Switch component menu name for RectMask2D to match class name

Improvements

    UI: Added a new property AscentCalculationMode to TrueTypeFont importer to control how font ascent value is determined.
    UI: Align By Geometry now supports vertical alignment; this can be useful for cases where the font ascent/descent info has large uneven spacing.
    UI: Created an empty RectMask2D editor and modified the selectable one to hide script fields
    UI: Improved the way that line spacing affects leading in text generation to provide more predictable leading when line spacing is less than 1.
    UI: Made more functions virtual inside Graphics class
    Windows Store: Improved Visual Studio project generation, the solution shouldn't rebuild needlessly anymore, you might need to delete the old generated project so it can be regenerated

Fixes

    Editor: EditorGUIUtility.ObjectContent now adds type information to the text string as shown for ObjectFields: E.g: "Concrete (Texture2D)" instead of "Concrete".
    Editor: Fix editor crash when locing cursor from constructor or static initializer
    Editor: Fix to prevent the following error: "GetEditorTargetName is not allowed to be called from a MonoBehaviour constructor, call it in Awake or Start instead".
    iOS: OS: Ensure asset bundles are not flagged for iCloud backup by default upon download.
    Mac Editor: Added functionality in order to prevent the processing of folders that contain the ".unity" extension, as this was causing the editor to crash when executing in batch mode.
    Particles: Collider visualization was not scaling with transform
    Particles: Fixed Shape Module error when shader doesn't have _Color property
    Particles: Fixing Skinned Mesh Renderer Shape crash when its material was missing
    Particles: Hiding "Angle" option in Shape Module when it is not relevant
    Particles: Renaming Particle.lifetime property to Particle.remainingLifetime for clarity
    Particles: Size over lifetime using separate axes wasn't always working
    Particles: Texture Sheet Animations could incorrectly loop back to the first frame at the end of their animation
    Particles: Trigger Module crashed when assigning the wrong list type via script
    Particles: Trigger Module wasn't spawning death sub emitters
    Particles: Visualize Bounds did not scale the debug rendering correctly
    UI: Fixed incorrect line height with embedded quads in rich text
    UI: Fixed the issue with the font importer inspector getting dirtied each time it was enabled.
    WebGL: Fixed WebGL 2.0 support to run on browsers implementing the final WebGL 2.0 specifications.
    Windows Store: Fix build and run when Unicode characters with diacritics are used in product name
    Windows Store: Fix duplicate tab key in XAML elements whenever Unity is running with enabled input
